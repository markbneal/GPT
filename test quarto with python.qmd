---
title: "Test quarto with python"
format: html
editor: visual
---

## Quarto

```{python}
# How to use GPT-4 to summarize documents for your audience

# https://generative-ai-newsroom.com/how-to-use-gpt-4-to-summarize-documents-for-your-audience-18ecfe2ad6a4

# https://colab.research.google.com/drive/1EckuVSCJCPgIiz7fzQh4gRJRrC9j5Mss

sys.version

# !pip install openai
# !pip install tiktoken
# !pip install pdfplumber
# !pip install requests
# !pip install arxiv
# 
# # Added to pip install
# !pip install pandas
# !pip install scikit-learn
# !pip install scipy 
# !pip install matplotlib
# !pip install numpy
# !pip install sklearn
# !pip install IPython
# !pip install python-decouple

import pandas as pd
from sklearn.metrics import mean_squared_error
import openai
import json
import time
from openai.error import RateLimitError
import tiktoken
import requests
import pdfplumber
import io
from IPython.display import Markdown
import arxiv
from pathlib import Path
import os
from decouple import config

# TODO - Copy your Open AI Secret Key here
# Obviously not good practice in text
openai.api_key = "sk-myapikey"


## Better to use environment variables, but not clear how to access posit connect to do this?

## Method 1
## maybe this? 
## https://docs.posit.co/connect/user/accessing/#api-keys-from-code

## Setup 
# export GPT_API=sk-test # in terminal?
# os.environ['GPTAPI_1'] = 'sk-test' # in script, not permanently stored on workbench

## Retrieve
os.getenv(GPTAPI_1)
print(os.getenv("GPTAPI_1"))
# openai.api_key = config('GPTAPI_1')

## Method 2
## This works on workbench 
## It might work on Posit Connect if .env file is uploaded - but is it secure?
# https://able.bio/rhett/how-to-set-and-get-environment-variables-in-python--274rgt5

## Setup 
## Create file called ".env", which has format GPTAPI_2=sk-myapikey, new line at end)

## Retrieve
print(config('GPTAPI_2'))
# openai.api_key = config('GPTAPI_2')


# or backup (File is key only, no new line after)
## It might work on Posit Connect if .txt file is uploaded - but is it secure?
openai.api_key = Path('GPTAPI.txt').read_text()

# 
# def getPDFText(url):
#   # download the file
#   response = requests.get(url)
# 
#   document_text = ""
# 
#   # load the PDF file using pdfplumber
#   with pdfplumber.open(io.BytesIO(response.content)) as pdf:
#       # iterate over all the pages in the PDF file
#       for page in pdf.pages:
#           # extract the text from the page
#           text = page.extract_text()
# 
#           document_text = document_text + " " + text
# 
#   return document_text
# 
# def getAbstract(paper_id):
#   # Search for the paper with the given ID
#   search = arxiv.Search(id_list=[paper_id])
#   paper = next(search.results())
# 
#   # Extract the abstract text
#   abstract_text = paper.summary
#   return abstract_text
# 
# def summarize(document_prompt, user_prompt, system_prompt, model, temp=.7, tokens=750):
#   response = openai.ChatCompletion.create(
#           model=model,
#           messages=[{"role": "system", "content": system_prompt},
#                     {"role": "user", "content": document_prompt},
#                     {"role": "user", "content": user_prompt}],
#           temperature=temp, 
#           max_tokens=tokens,
#           top_p=1,
#           frequency_penalty=0,
#           presence_penalty=0
#         )
#   output_summary = response["choices"][0]["message"]["content"]
#   return output_summary
# # End
# 1
# 
# #Testing Paper 1
# 
# # Example
# document_text = getPDFText("https://arxiv.org/pdf/2304.00228.pdf")
# abstract_text = getAbstract("2304.00228")
# 
# # Mine
# document_text = getPDFText("https://github.com/markbneal/GPT/raw/55c49ebdc7b12526b012a125bc2d7663f4bcad0a/1-s2.0-S1751731118002471-main.pdf")
# 
# system_prompt = "You are a research assistant. Return your results in Markdown format." 
# document_prompt = "You will accurately answer questions about the following research paper: " + document_text
# model = "gpt-3.5-turbo"
# extracted_info = []
# 
# user_prompt = "What research question is the paper trying to answer? Explain what the researchers did to\
#  study that question, including the specific methods used and analyses performed. Explain thoroughly and be sure to include specific details."
# t = summarize(document_prompt, user_prompt, system_prompt, model)
# display(Markdown(t))
# extracted_info.append(t)
# # Error - Too many tokens in my doc
```

